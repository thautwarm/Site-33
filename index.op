@toc|--depth 1|
@begin md
## Index
@end md
@begin ptag-set
    Index
@end ptag-set

@begin py
from original_posting.types import Runtime
from datetime import datetime, timedelta
from original_posting.ptag_dsl import match_any_tag
from pathlib import Path
import os
IS_PERSONAL = not os.environ.get("PRIVATE")
DEBUG = bool(os.environ.get("DEBUG"))
Runtime.search_path.append(str(Path('./local-scripts').absolute()))
DATE_FORMAT = '%Y-%m-%d'

def parse_date(s):
    return datetime.strptime(s, DATE_FORMAT)

def format_doc_ref(op_doc):
    title = op_doc.title or op_doc.output_path_absolute.name
    p = @ptag-pat|Time(~time)|
    scope = {}
    if match_any_tag(p, op_doc.tags, scope):
        title += " (%s)" % scope['time']
    return title
@end py

@begin IF DEBUG
@begin every-doc
<script>
function freshCallback()
{
    if (typeof this.responseText == "string" && this.responseText.trim() == "")
    {
        location.reload();
    }
}

function onRefresh()
{
    var oReq = new XMLHttpRequest();
    oReq.addEventListener("load", freshCallback);
    oReq.open("GET", "/update" + window.location.pathname)
    oReq.send();
}
setInterval(() =>{
    onRefresh();
}, 1800);
</script>
@end every-doc
@end IF

@center-all| |

@set-index-format|format_doc_ref|

@begin IF IS_PERSONAL
    @include|design/a-short-intro-to-active-patterns.op|
    @include|design/linear-time-lr-in-glr.op|
    @include|design/julia-redef-struct.op|
    @include|design/naming-convention-for-c-ident-based-langs.op|
    @include|compiler/interpreter.op|
@end IF

@begin IF "not IS_PERSONAL"
    @begin comment
        @include|private/interpreter.op|
        @include|private/jnumpy.op|
    @end comment
    @include|private/ty-mlang.op|
    @include|private/python-test.op|
@end IF

Recently updated programming ideas:

@begin ptag-filter-index
    Time(~x) and P[parse_date(x) - datetime.now() < timedelta(days=365)]
@end ptag-filter-index


PL articles:

@begin ptag-filter-index
    Topic(PL, ~level) and P[level == 'Professional']
@end ptag-filter-index
