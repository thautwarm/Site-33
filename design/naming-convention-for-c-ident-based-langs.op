首页：
@begin ptag-filter-index
    Index
@end ptag-filter-index

@begin ptag-set
    NeedTranslation
    Time('2022-08-08')
    Language(Chinese)
@end ptag-set
目录:
@toc|--depth 1|

@center-all| |

@begin md tables

@begin code --lang python
@end code

# 适用于"C标志符语言"的编程命名规范

## 函数命名

### 根据副作用的类型对函数进行命名

1. 实际上有副作用,但对外部不可见@footnote|封装副作用:副作用对外部不可见, 但内部可能维护副作用状态|, 或严格无副作用@footnote|语言层副作用:不介入语言层之下如操作系统,调用函数无法观察到任何状态变化|:

   变量结尾不是下划线, 例如 `xx`.

    @begin code --lang Python
    z = math_func(x, y)
    key = cache_data_by_identity(o)
    @end code

2. 对外部可见的副作用: 变量结尾为单下划线 @code|xx_|

    @begin code
    torch.zero_(mat)
    randomize_(data)
    @end code

术语简写:



| 原始形式        | 缩写        | 特殊说明 |
|:--------------:|:------------:|:---|
| element        | elt          |     |
| element type   | elt_t, elty  | 组词时使用`elty`    |
| type           | ty, typ, t   |     |
| state          | st, sta, s   |     |
| current        | cur, curr    |     |
| previous       | pre, prev    |     |
| symbol         | sym          |     |


## 通用命名

命名法规则

1. 关注点(focus)+双下划线+视角(perspective), 例:

    - 宿主语言创建目标语言(target language)的符号(symbol).

        例如关注点是`sym`和函数名(`func_name`), 目标语言是python, 命名如下

        @begin code --lang python
        sym_func_py = crate_py_sym()
        @end code


(待更新)

@end md